Name:- Kashish Patel
student number:- 501050150
Section :- COE428-052

> First of all, we have to program a towerMain.c it is a main program file used to solve the tower of hanoi, we will be implementing a recursive algorithm to solve the towers. we will custom in the amount of disk n and starting location, from, dest, statement to execute the program.
towers(n, from, dest);


> There are 3 arguments given on the command line. There are no arguments, one argument, and three arguments. We cannot have more than 3 arguments and less than no arguments. 

> No arguments

If no arguments are given, the problem is solved for moving 3 disks from Tower 1 to Tower 2.

> One argument (numberDisks)

If only one argument is given, the problem is solved for moving numberDisks disks from Tower 1 to Tower 2.

> Three arguments (numberDisks fromID toID)

If all three arguments are given, the problem is solved for moving numberDisks disks from Tower fromID to Tower toID. The tower IDs must be either '1', '2' or '3' and the two IDs must be different.




There are some conditions to the input program.
1) Numbers higher than 3 in the arguments will not accept.
2) No negative numbers.
3) No value of 0 in any location
4) It will not accept only 2 arguments, However accept 0, 1 or 3 arguments



> Files junk1 junk2 and pureStdout are files that contain the output from testing the stdout and stderr speration as per mention in lab manual.



Requirement 1
1) We have (5,2,3) being invoked in the tower. From the code, we have variables n,from,dest in that order.  n=5, from = 2, and dest= 3. The output is going to be 
towers(n-1,from,spare). > n= 5 -1=> n=4
> spare = 6 - from - dest
> 6-2-3 = 1
> spare=1
> Therefore, the first recursive call will be towers(4,2,1).

2) 6 recursive calls 
3) Total Number of moves 31 moves for towers (5,2,3)

4) We have (6,1,2) being invoked in the tower.
> n=6 => 6-1 = 5
> from= 1
> dest= 2
> spare = 6 - from - dest
> 6 -1 - 2 =3
> spare=3
> Therefore, the first recursive call will be towers(5,1,3). 
> Second recursive call tower will be towers(4,1,2).

Question 2
> Time complexity is T(n) = 2^(n)-1. n = 8 > It will be 255 lines.

> I have successfully complete my lab using youtube for learning the concepts, lab2 notes and help of my brother to complete my lab 2.